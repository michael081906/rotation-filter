dist: xenial
sudo: required
language: cpp
compiler:
  - gcc
os: 
  -linux
cache:
  - apt
env:
  global:
    - ROS_CI_DESKTOP="$(lsb_release -cs)"
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j8 -l6'
    - COVERALLS= true

  matrix:
    - ROS_DISTRO=kinetic

notifications:
  slack: imerse-lcsr:l6DqibemgI7SXDkm9zs9FUUA

before_install:

  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin python-catkin-tools ros-$ROS_DISTRO-desktop-full ros-$ROS_DISTRO-pcl-ros
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep
  - sudo rosdep init
  - rosdep update

  - pip install --user cpp-coveralls

install:
  # Create catkin workspace
  - sudo apt-get install -y -qq lcov

  - mkdir -p ~/catkin_ws
  - cd ~/catkin_ws
  - catkin config --init --mkdirs
  # Pull source depends
  - cd src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]]; then wstool merge $ROSINSTALL_FILE; fi
  - wstool up
  # Link the repo we are testing to the new workspace
  - ln -s $CI_SOURCE_PATH .
  # Install dependencies using rosdep
  - cd ~/catkin_ws
  - rosdep install -q -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO

before_script:
  - source /opt/ros/$ROS_DISTRO/setup.bash

script:
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - cd ~/catkin_ws
  #- mkdir build
  #- cd build
  #- cmake -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug ../src -DCMAKE_INSTALL_PREFIX=../install -DCATKIN_DEVEL_PREFIX=../devel $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )
  #- make 
  #- cd ..

   - catkin_make -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug $([ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS)

# Run the tests, ensuring the path is set correctly.
  - source devel/setup.bash
  - catkin_make run_tests -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug && catkin_test_results

after_script:
  - source devel/setup.bash
  - cd ~/catkin_ws/build
  - make coveralls
  
